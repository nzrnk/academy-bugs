# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Отправить комментарий к товару только с обязательными полями
- Location: C:\Users\anzrn\academy-bugs\tests\products.spec.js:16:5

# Error details

```
Error: browserContext._wrapApiCall: Test ended.
Browser logs:

<launching> C:\Users\anzrn\AppData\Local\ms-playwright\chromium_headless_shell-1161\chrome-win\headless_shell.exe --disable-field-trial-config --disable-background-networking --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-back-forward-cache --disable-breakpad --disable-client-side-phishing-detection --disable-component-extensions-with-background-pages --disable-component-update --no-default-browser-check --disable-default-apps --disable-dev-shm-usage --disable-extensions --disable-features=AcceptCHFrame,AutoExpandDetailsElement,AvoidUnnecessaryBeforeUnloadCheckSync,CertificateTransparencyComponentUpdater,DeferRendererTasksAfterInput,DestroyProfileOnBrowserClose,DialMediaRouteProvider,ExtensionManifestV2Disabled,GlobalMediaControls,HttpsUpgrades,ImprovedCookieControls,LazyFrameLoading,LensOverlay,MediaRouter,PaintHolding,ThirdPartyStoragePartitioning,Translate --allow-pre-commit-input --disable-hang-monitor --disable-ipc-flooding-protection --disable-popup-blocking --disable-prompt-on-repost --disable-renderer-backgrounding --force-color-profile=srgb --metrics-recording-only --no-first-run --enable-automation --password-store=basic --use-mock-keychain --no-service-autorun --export-tagged-pdf --disable-search-engine-choice-screen --unsafely-disable-devtools-self-xss-warnings --headless --hide-scrollbars --mute-audio --blink-settings=primaryHoverType=2,availableHoverTypes=2,primaryPointerType=4,availablePointerTypes=4 --no-sandbox --user-data-dir=C:\Users\anzrn\AppData\Local\Temp\playwright_chromiumdev_profile-tInFoc --remote-debugging-pipe --no-startup-window
<launched> pid=44844
```

# Test source

```ts
   1 | import { expect } from '@playwright/test';
   2 | import { test } from '../src/fixture/fixture';
   3 | import { errors, messages } from '../src/data/messages';
   4 |
   5 |
   6 | test('Изменить количество отображаемых товаров на странице', async({ app }) => {
   7 |     test.slow();
   8 |     await app.mainPage.changeProductViewAmount();
   9 |     await app.waitForOverlay();
   10 |     
   11 |     await test.step('Появляется оверлей с сообщением об ошибке', async() => {
   12 |         await expect(app.overlay).toContainText(errors.crushBug);
   13 |     });
   14 | });
   15 |
>  16 | test('Отправить комментарий к товару только с обязательными полями', async({ app }) => {
      |     ^ Error: browserContext._wrapApiCall: Test ended.
   17 |     test.slow();
   18 |     await app.mainPage.goToProductPage();
   19 |     await app.productPage.postComment(app.comment.name, app.comment.email);
   20 |     await app.waitForOverlay();
   21 |     
   22 |     await test.step('Появляется оверлей с сообщением об ошибке', async() => {
   23 |         await expect(app.overlay).toContainText(errors.crushBug);
   24 |     });
   25 | });
   26 |
   27 | test('Изменить отображение цены товара в евро', async({ app }) => {
   28 |     test.slow();
   29 |     await app.mainPage.goToProductPage();
   30 |     await app.productPage.changeCurrencyEur();
   31 |     await app.waitForAnotherOverlay();
   32 |
   33 |     await test.step('Появляется оверлей с сообщением об ошибке', async() => {
   34 |         //со стандартной ошибкой почему-то тест не проходит
   35 |         await expect(app.anotherOverlay).toContainText(errors.crushBugShort); 
   36 |     });
   37 | });
   38 |
   39 | test('Перейти на детальную страницу hot item', async({ app }) => {
   40 |     test.slow();
   41 |     await app.mainPage.goToProductPage();
   42 |     await app.productPage.goToHotItem();
   43 |     await app.waitForPopUp();
   44 |    
   45 |     await test.step('Появляется поп-ап для выбора типа и описания бага', async() => {
   46 |         await expect(app.popup).toContainText(messages.bugPopUpMessage);
   47 |     });
   48 | });
   49 |
   50 | test('Отфильтровать товары по ценовому диапазону', async({ app }) => {
   51 |     test.slow();
   52 |     await app.mainPage.goToProductPage();
   53 |     await app.productPage.filterPriceRange();
   54 |     await app.waitForPopUp();
   55 |  
   56 |     await test.step('Появляется поп-ап для выбора типа и описания бага', async() => {
   57 |         await expect(app.popup).toContainText(messages.bugPopUpMessage);
   58 |     });
   59 | });
   60 |
   61 | test('Перейти на страницу производителя товара', async({ app }) => {
   62 |     test.slow();
   63 |     await app.mainPage.goToProductPage();
   64 |     await app.productPage.goToManufacturer();
   65 |     await app.waitForPopUp();
   66 |    
   67 |     await test.step('Появляется поп-ап для выбора типа и описания бага', async() => {
   68 |         await expect(app.popup).toContainText(messages.bugPopUpMessage);
   69 |     });
   70 |     
   71 | });
   72 |
   73 | test('Увеличить количество товара в корзине больше чем на 1 еденицу', async({ app }) => {
   74 |     test.slow();
   75 |     await app.mainPage.goToProductPage();
   76 |     await app.productPage.addToCart();
   77 |     await app.waitForCart();
   78 |     await app.cartPage.changeAmount('5');
   79 |     await app.cartPage.updateAmount();
   80 |     await app.waitForCongratsPopUp();
   81 |
   82 |     await test.step('Появляется поп-ап для выбора типа и описания бага', async() => {
   83 |         await expect(app.congratsPopUp).toContainText(messages.firstCongrats);
   84 |     });
   85 |
   86 | });
   87 |
   88 | test('Неверное отображение итоговой цены заказа', async({ app }) => {
   89 |     test.slow();
   90 |     await app.mainPage.goToProductPage();
   91 |     await app.productPage.addToCart();
   92 |     await app.waitForCart();
   93 |     await app.cartPage.totalPrice();
   94 |     await app.waitForPopUp();
   95 |   
   96 |     await test.step('Появляется поп-ап для выбора типа и описания бага', async() => {
   97 |         await expect(app.popup).toContainText(messages.bugPopUpMessage);
   98 |     });
   99 | });
  100 |
  101 |
  102 |
  103 |
```